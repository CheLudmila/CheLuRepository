# üîÅ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏

def even_numbers(n):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ 0 –¥–æ N"""
    for i in range(0, n + 1, 2):
        yield i

def fibonacci(n):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª –§—ñ–±–æ–Ω–∞—á—á—ñ –¥–æ N"""
    a, b = 0, 1
    while a <= n:
        yield a
        a, b = b, a + b

# üîÅ –Ü—Ç–µ—Ä–∞—Ç–æ—Ä–∏

class ReverseIterator:
    """–Ü—Ç–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –æ–±—Ö–æ–¥—É —Å–ø–∏—Å–∫—É"""
    def __init__(self, data):
        self.data = data
        self.index = len(data)

    def __iter__(self):
        return self

    def __next__(self):
        if self.index == 0:
            raise StopIteration
        self.index -= 1
        return self.data[self.index]

class EvenIterator:
    """–Ü—Ç–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –¥–æ N"""
    def __init__(self, n):
        self.n = n
        self.current = 0

    def __iter__(self):
        return self

    def __next__(self):
        while self.current <= self.n:
            if self.current % 2 == 0:
                result = self.current
                self.current += 1
                return result
            self.current += 1
        raise StopIteration

# ‚ú® –î–µ–∫–æ—Ä–∞—Ç–æ—Ä–∏

def log_args_result(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É"""
    def wrapper(*args, **kwargs):
        print(f"[LOG] –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó: {func.__name__}")
        print(f"[LOG] –ê—Ä–≥—É–º–µ–Ω—Ç–∏: args={args}, kwargs={kwargs}")
        result = func(*args, **kwargs)
        print(f"[LOG] –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return result
    return wrapper

def handle_exceptions(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–∏–Ω—è—Ç–∫—ñ–≤"""
    def wrapper(*args, **kwargs):
        try:
            return func(*args, **kwargs)
        except Exception as e:
            print(f"[ERROR] –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")
            return None
    return wrapper

# ‚úÖ –¢–µ—Å—Ç–∏ —Ç–∞ –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è

if __name__ == "__main__":
    print("== –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –¥–æ 10 ==")
    for num in even_numbers(10):
        print(num, end=" ")
    print("\n")

    print("== –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –§—ñ–±–æ–Ω–∞—á—á—ñ –¥–æ 21 ==")
    for num in fibonacci(21):
        print(num, end=" ")
    print("\n")

    print("== –ó–≤–æ—Ä–æ—Ç–Ω–∏–π —ñ—Ç–µ—Ä–∞—Ç–æ—Ä —Å–ø–∏—Å–∫—É ==")
    for item in ReverseIterator([1, 2, 3, 4]):
        print(item, end=" ")
    print("\n")

    print("== –Ü—Ç–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –¥–æ 10 ==")
    for num in EvenIterator(10):
        print(num, end=" ")
    print("\n")

    @log_args_result
    def multiply(x, y):
        return x * y

    print("== –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤–∏–∫–ª–∏–∫—É multiply(3, 4) ==")
    multiply(3, 4)
    print()

    @handle_exceptions
    def divide(a, b):
        return a / b

    print("== –û–±—Ä–æ–±–∫–∞ –≤–∏–Ω—è—Ç–∫—É –ø—Ä–∏ divide(10, 0) ==")
    divide(10, 0)